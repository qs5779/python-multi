---
name: Publish Releases to DockerHub

# from https://github.com/metcalfc/docker-action-examples/blob/main/app/Dockerfile
# When its time to do a release do a full cross platform build for all supported
# architectures and push all of them to Docker Hub.
on:
  push:
    tags:
      - "20[0-9]+"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # GitHub Actions do not automatically checkout your projects. If you need the code
      # you need to check it out.
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=qs5779/python-multi
          DOCKER_TAGS="${DOCKER_IMAGE}:${GITHUB_REF_NAME},${DOCKER_IMAGE}:latest"
          echo ::set-output name=dockertags::${DOCKER_TAGS}
          GHCR_IMAGE=gchcr.io/qs5779/python-multi
          GHCR_TAGS="${GHCR_IMAGE}:${GITHUB_REF_NAME},${GHCR_IMAGE}:latest"
          echo ::set-output name=ghcrtags::${GHCR_TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.WTF_ONE_FREE }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./src
          file: ./src/Dockerfile
          # platforms: linux/386,linux/amd64,linux/arm32v7,linux/arm64,linux/ppc64le,linux/s390x,linux/riscv64
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.dockertags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
...
